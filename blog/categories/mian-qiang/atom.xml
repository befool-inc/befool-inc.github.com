<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 勉強 | BEFOOL blog]]></title>
  <link href="http://befool-inc.github.io/blog/categories/mian-qiang/atom.xml" rel="self"/>
  <link href="http://befool-inc.github.io/"/>
  <updated>2013-05-23T13:52:48+09:00</updated>
  <id>http://befool-inc.github.io/</id>
  <author>
    <name><![CDATA[Your Name]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Unity勉強 第5回 「アニメーションgifって使えるの？」]]></title>
    <link href="http://befool-inc.github.io/blog/2013/05/22/unity-study-05-enable-animated-gif/"/>
    <updated>2013-05-22T21:05:00+09:00</updated>
    <id>http://befool-inc.github.io/blog/2013/05/22/unity-study-05-enable-animated-gif</id>
    <content type="html"><![CDATA[<h2>前回までのおさらい＆今回の目標</h2>

<p>前回は、「ボタンを押したらサウンドを鳴らす」というテーマに挑み、情報の少なさに辟易しながらも、匍匐前進でなんとか目標を達成しました。
本日は、「アニメーションgifって使えるの？」をテーマに進行したいと思います。</p>

<h2>画像の選出</h2>

<p>まずは組み込むためのアニメーションgif探しからです。<br/>
オシャレ男子であれば、ここで颯爽と「ゴッホ」だとか「ゴーギャン」だとか拾ってくるところですが、僕のようなオタク男子ではやはりこういう結果にあいなります。</p>

<p><img src="/images/posts/2013-05-22-unity-study-05-enable-animated-gif/miku.gif" alt="ミクさん" /></p>

<p>ブヒヒヒィィィィィ！<br/>
ミクさんかわいいよ、ぺろぺろ。</p>

<p>落としてきたgifファイルはassetsに投げ込んでおきます。</p>

<h2>初音ミクは動かない</h2>

<p>さて、assetsに追加したミクさんgifを、ステージに配置したいので、</p>

<p>GameObject > Create Other > GUI Texture</p>

<p>を選択。なんかデフォルトでミクさんgifが選択されていましたが、もし選択されない場合はinspectorのtextureメニューでミクさんgifを選択してあげてください。</p>

<p>Unity先生であれば、もうこれでミクさんを動かしてくれてるんでしょ？もうかっこよすぎ☆なんて思ってプレビューしてみると…、</p>

<p><img src="/images/posts/2013-05-22-unity-study-05-enable-animated-gif/preiew.first.png" alt="初音ミクは動かない" /></p>

<p>動かない、だと…。<br/>
ミクさんは止まったままです。一向に動いてくれる気配がありません。</p>

<p>「やれやれだぜ…」</p>

<p>Unity先生も万能じゃないのね、と失望半分、かわいさ半分の気持ちを織り交ぜつつ、今回も大変な回になりそうだぜ、という予感がざわざわと立ち上ぼり始めました。</p>

<h2>どうしてアニメーションgifは使えないのか？</h2>

<p><a href="http://forum.unity3d.com/threads/27873-animated-gif-is-not-working">animated gif is not working</a></p>

<p>この質問に回答しているEric5h5さんが言うには、</p>

<blockquote><p>Unity doesn't have any support for animated gifs. It's a terrible format anyway; use a series of textures instead.<br/>
(智史之介訳：Unityはアニメーションgifをサポートしていないよ！あれはひどい形式をしてやがるんだよ…。代わりにtextureを使ってくれよな！)</p></blockquote>

<p>まじかー。そんなこと言わずにサポートしてくださいおねがいします(ｽﾞｻﾞｰ</p>

<p>しかたがないので、textureでやってみようと思います。</p>

<h2>アニメーションgifを分割してみる</h2>

<p>アニメーションgifを分解するのに「ImageMagick」を用いました。</p>

<p><code>bash
$ convert +adjoin -coalesce miku.gif miku-notanimated.gif
$ ls -1
miku-notanimated-0.gif
miku-notanimated-1.gif
miku-notanimated-2.gif
miku-notanimated-3.gif
miku-notanimated-4.gif
miku-notanimated-5.gif
miku-notanimated-6.gif
miku-notanimated-7.gif
miku-notanimated-8.gif
miku-notanimated-9.gif
</code></p>

<p>うん、おｋっぽいですね。</p>

<h2>箱形の作成</h2>

<p>これらの画像を表示するための箱形を用意しましょう。
僕は「GUITexture」を選びました。</p>

<p>GameObject > Create Other > GUI Texture</p>

<p>で、シーンに配置します。
デフォルトのtextureには、「miku-notanimated-0.gif」を選択し、pixel insetに関しても調整しておきます。</p>

<p><img src="/images/posts/2013-05-22-unity-study-05-enable-animated-gif/inspector.add.guitexture.png" alt="GUI Texture追加" /></p>

<h2>ミクさん画像を切り替えるためのスクリプトを追加</h2>

<p>Assets > Create > Javascript</p>

<p>で、スクリプトを作成します。名前は「miku」とでもしておきます。
そしてそれを先ほど作成した「GUI Texture」にドラッグ＆ドロップでアタッチ！</p>

<p>inspector上で、「miku(script)」が追加されていればおｋです。</p>

<p><img src="/images/posts/2013-05-22-unity-study-05-enable-animated-gif/inspector.add.script.png" alt="script追加" /></p>

<p>さあ、ここらが本番です。<br/>
今追加したスクリプトでやりたいことは、「textureを一定時間毎に切り替えていく」という処理です。</p>

<p>スクリプトはこんな感じになると思います。</p>

<p><a href="http://answers.unity3d.com/questions/13156/animated-gif-as-a-texture-on-iphone.html">Animated Gif(Unity Answers)</a>
を参考にしました。<br/>
はい、コピペって言わない！</p>

<p>```javascript</p>

<h1>pragma strict</h1>

<p>var frames : Texture2D[];
var framesPerSecond = 10.0;</p>

<p>function Start () {</p>

<p>}</p>

<p>function Update () {</p>

<pre><code>var index : int = Time.time * framesPerSecond;
index = index % frames.Length;
guiTexture.texture = frames[index];
</code></pre>

<p>}
```</p>

<p>ただ、ここで即プレビューしてもうまく動きません。当たり前の話ですが「frames」として定義された配列に、何もデータが入っていないためです。
この配列にデータをぶち込むにはどうしたらよいのでしょうか？<br/>
答えは「inspector上で追加する」でした。</p>

<p><img src="/images/posts/2013-05-22-unity-study-05-enable-animated-gif/inspector.frames.size0.png" alt="size0" /></p>

<p>この「size」プロパティに「10」をぶち込んでください。すると…</p>

<p><img src="/images/posts/2013-05-22-unity-study-05-enable-animated-gif/inspector.frames.size10.png" alt="size10" /></p>

<p>おおおお！textureを指定できる覧が出てきたぞ！これはかなりの感動ものです。<br/>
プログラマ的には、ソース上で定義したデータ箱にGUI上からサイズの指定を行う、というフローになかなか感覚がついていかないので、
時間があるときにでもソース上からsizeを指定する方法を探してみます。ひとまず今日はこのまま進むぜ！</p>

<p>あとは、簡単です。出てきたtextureの指定欄の一つ一つに、分解されたgifを当て込んでいきます。<br/>
それでプレビューすると…</p>

<p><img src="/images/posts/2013-05-22-unity-study-05-enable-animated-gif/preview.animated.png" alt="アニメーションしてる" /></p>

<p>動いてるーーーーー！（画像じゃ分からないけど）</p>

<p>まあいいだろう。ミッションコンプリートだ！</p>

<h2>次回に向けて</h2>

<p>Unityがとんでもない発表をしてくれました。Unityのモバイル向け機能を完全無償化するというのです。
早速試そう！ということで、次回は「iPhone用にビルド」、いってみたいと思います！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Unity勉強 第4回 「簡単なプログラムをやってみる：ボタンを押したら音楽を再生」]]></title>
    <link href="http://befool-inc.github.io/blog/2013/05/20/unity-study-04-easy-programing-play-sound-on-button-pushed/"/>
    <updated>2013-05-20T20:58:00+09:00</updated>
    <id>http://befool-inc.github.io/blog/2013/05/20/unity-study-04-easy-programing-play-sound-on-button-pushed</id>
    <content type="html"><![CDATA[<h2>前回までのおさらい＆今日の目標</h2>

<p>どうもみなさん。おはようございます。初音ミクとミンカが三度の飯より大好きな智史之介です。
今日も今日とてUnityの勉強をおこないたいと思います。<br/>
前回は「サウンドを鳴らす」というテーマでやりましたが、今回はそれに簡単なプログラミングをつけてみたいと思います。</p>

<p>フー！プログラマの腕が鳴るというものです。</p>

<h2>音楽の調達</h2>

<p>今日こそ、モテ路線です。レミオロメンとか、ガリレオガリレイとかビシーッと選んでやろうじゃないの、ということで選んだのがこれです。
ババーン。</p>

<iframe width="420" height="315" src="http://www.youtube.com/embed/1dB8in_QRrw" frameborder="0" allowfullscreen></iframe>


<p>いいんです。これでいいんです！(川平風)<br/>
ありのままの姿でモテてこそ、真のモテ男子でしょう。</p>

<p>DLしてきたMP3をさくっとassetsに追加します。</p>

<h2>スクリプトの追加</h2>

<p>そろそろ何か参考書でも買えよ、っていう感じですが、やはり手探りで進めてこそオツというものでしょう。
ググって済ませるのがよく訓練された職業プログラマの正しい姿勢ではないでしょうか。</p>

<p>なにかそれっぽいメニューはないかなーと探していたら、ありました。</p>

<p>Assets > Create</p>

<p>の中に、</p>

<ul>
<li>Javascript</li>
<li>C# Script</li>
<li>Boo Script</li>
</ul>


<p>などなど、それっぽいのがあるではありませんか。（Boo Scriptってなんだ？）<br/>
どれでもいけるのかな？<br/>
そしたら、とりあえずは慣れ親しんでいる「Javascript」を選びたいと思います。ファイル名は当たり障りのない感じで「main.js」とでもしておきました。</p>

<h2>MonoDevelop</h2>

<p>main.jsのinspectorに、「open」なんてボタンがあるものだからついつい押してしまったら、なんと組み込みのエディターみたいなものが立ち上がるじゃないですか！<br/>
内心「うぜーーー」と思いつつも、Unity初心者の域を出ない僕としては贅沢は言ってられません。vim上に開発環境を置く作業はUnity中級になってからにします。</p>

<p><img src="/images/posts/2013-05-20-unity-study-04-easy-programing-play-sound-on-button-pushed/monodevelop.png" alt="MonoDevelop" /></p>

<p>さて。<br/>
コーディングを始めましょうか。</p>

<h2>なにをすればよいのやら</h2>

<p>```js</p>

<h1>pragma strict</h1>

<p>function Start () {</p>

<p>}</p>

<p>function Update () {</p>

<p>}
```</p>

<p>main.js内にはデフォルトでこのような記述がされています。<br/>
「function Start」は、シーンの開始時、あるいはアタッチされたオブジェクトのロード時に実行されるのかな？<br/>
「function Update」は、シーンの描画時（再描画含む）にでも実行されるのかな？<br/>
などと適当な想像を膨らませつつ、「じゃあ、ボタンを押した時のスクリプトはどうすればいいんじゃい！」と突っ込みます。<br/>
ActionScriptで言うところの、ムービークリップに記述するonPressにあたる処理ですね。
イメージとしては、まずこのjsファイルを、特定のオブジェクトにアタッチ的な何かをする必要性がありそうです。</p>

<h2>適当なオブジェクトを追加</h2>

<p>というわけで、main.jsのアタッチ先にするために、何か適当にオブジェクトを画面上に配置してみることにします。<br/>
僕は「GUI Text」をチョイスしました。テキストの中身は「ボタン」。プログラマらしい、実に的確に表現された文言です。</p>

<p>Hierarhy上のGUI Textに、ものは試しだとドラッグ＆ドロップでmain.jsを投げ込んでみました。
すると…、</p>

<blockquote><p><strong>Can't add script</strong><br/>
Can't add script behavior main.js. The scripts file name does not match the name of class defined in the script!</p></blockquote>

<p>怒られました。<br/>
勉強第4回目にしてやる内容じゃねえよ、出直してきな！と言われているような気がして、急に冷や汗が出てきました。</p>

<p>大丈夫。大丈夫さ…。君はやれる。いつだって困難を乗り越えてきたじゃないか。</p>

<p>と自分を励ましてみる。</p>

<p>ああ、そうさ。我が名は智史之介。日本を代表するエンジニアになる漢(おとこ)さ…。</p>

<h2>inspectorからのcomponentの追加</h2>

<p>何度ドラッグ＆ドロップしても当然状況は改善しないので、別の方法を試してみることにしました。<br/>
「GUI Text」をクリックして、inspectorウインドウから「add component」をクリック。<br/>
なんとそこに「New script」の文字列が…！あるではないか、あるではないかとテンションが上がるのを抑えつつ、scriptを追加（言語はJavascriptを選択）。
おお、なんか、追加されたっぽい！</p>

<p><img src="/images/posts/2013-05-20-unity-study-04-easy-programing-play-sound-on-button-pushed/inspector.add.script.png" alt="スクリプトをアタッチ" /></p>

<h2>scriptの編集</h2>

<p>先ほどの操作で、スクリプトとGameObjectの関連づけに成功しているはず。
なので、あとは「クリックされたとき」というイベントに処理を記述すればおｋ、ということになります。</p>

<p>一生懸命ググった結果、下記のようなコードを追加してみました。</p>

<p><code>js
function OnMouseUpAsButton() {
  Debug.Log("pressed!!");
}
</code></p>

<p>そして、プレビューして、無我夢中でクリック！！すると…、</p>

<p><img src="/images/posts/2013-05-20-unity-study-04-easy-programing-play-sound-on-button-pushed/preview.onpress.png" alt="onPressイベント" /></p>

<p>できてるよママ！</p>

<h2>さあ、あとはサウンドを再生すればいいだけ</h2>

<p>もうすっかりドラッグ＆ドロップがくせになってしまっている僕は、assets内のサウンドファイルを、hierarhy上のGUI Textに投げ込んでみたら、なんかあっさり追加された。<br/>
このままだと、開始時に即サウンドがなってしまうので、inspector上の「Play On Awake」のチェックを外しておきました。<br/>
これを、プログラムで再生トリガーを引きたいのですぞ！</p>

<p><code>js
var sound : AudioClip;
function OnMouseUpAsButton() {
  Debug.Log("pressed!!");
  audio.play();
}
</code></p>

<p>ググりつつ、「こう書けばいいのだろうか？」という感じに適当に書いてみる。
複数のサウンドがアタッチされるケースだってあるし、これだとどのサウンドを鳴らせばいいのか全然わからないなー、Unity先生もお困りになるだろう、
なんて考えつつ、プレビューしてみる。そして「ボタン」をクリックしてみる。
すると…、</p>

<p><img src="/images/posts/2013-05-20-unity-study-04-easy-programing-play-sound-on-button-pushed/preview.sound.png" alt="onPressイベントでサウンド鳴った" /></p>

<p>鳴った…！ボタンを押したらサウンドが再生され始めました。<br/>
へへっ。ちょろいもんだぜ☆</p>

<p>細かい疑問は色々とあるけれど、そのうち色々分かるでしょう、という甘い期待をしつつ今日はここまで〜！</p>

<h2>次回に向けて</h2>

<p>次回は、そうですね、、、なにげに今回のテーマが重たくてすっかりビクついてしまった僕は、「アニメーションGIFって扱えるの？」という少し軽めの（と思われる）テーマで行きたいと思います。
よろしくお願いします！</p>
]]></content>
  </entry>
  
</feed>
