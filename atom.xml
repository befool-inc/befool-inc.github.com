<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[BEFOOL blog]]></title>
  <link href="http://befool-inc.github.io/atom.xml" rel="self"/>
  <link href="http://befool-inc.github.io/"/>
  <updated>2013-05-16T22:45:13+09:00</updated>
  <id>http://befool-inc.github.io/</id>
  <author>
    <name><![CDATA[Your Name]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Unity勉強 第3回 「サウンドを流してみる」]]></title>
    <link href="http://befool-inc.github.io/blog/2013/05/16/unity-study-03-use-sound/"/>
    <updated>2013-05-16T20:43:00+09:00</updated>
    <id>http://befool-inc.github.io/blog/2013/05/16/unity-study-03-use-sound</id>
    <content type="html"><![CDATA[<h2>前回までのおさらい</h2>

<p>おさらう程積み重ねがあるわけではありませんが、一応。<br/>
Hello World、画像を置いてみる、など本当にさわりだけを進めている感じで、今回はよし音楽でもおいちゃうぞーといった、そういう感じです。<br/>
アジカンとかのmp3をさくっとおいて、iPhoneから流しちゃって、かわいい女の子からきゃーきゃー言われたいです。
間違っても、初音ミクの「ストロボナイツ」とか、鏡音リンの「メランコリック」とか置いちゃだめですよ！女の子からどん引きされてしまいます！</p>

<h2>まずは音楽の調達</h2>

<p>さーて、大好きなこの曲を、youtubeあたりから落としてきます。</p>

<iframe width="420" height="315" src="http://www.youtube.com/embed/qWWlFdiT8b4" frameborder="0" allowfullscreen></iframe>


<p>くっ…違うんだ、僕よ、違うぞ…アジカンを選ぶんだ！<br/>
アジカンを選んで、もて路線を進むんだ！<br/>
サカナクションでも大丈夫だよ…。</p>

<p>うう…だめだ…、僕はミクさんを裏切れない(´；ω；`)ﾌﾞﾜｯ</p>

<h2>懲りずにドラッグ&amp;ドロップしてみる</h2>

<p><img src="http://befool-inc.github.io/images/posts/2013-05-16-unity-study-03-use-sound/drag_and_drop_sound.png" alt="ドラッグ&amp;ドロップ" /></p>

<p>ステージに直接、というのは無理で、やはりassetsに投げ込む、という形になりました。</p>

<p><img src="http://befool-inc.github.io/images/posts/2013-05-16-unity-study-03-use-sound/inspector_sound.png" alt="インスペクター" />
インスペクターをなんとなく確認してみた。
今のところさっぱりですね！</p>

<h2>これを再生させたい</h2>

<p>というわけで、いつも通り「GameObject > Create Other」の中を確認してみる。<br/>
が、ない。それっぽいメニューがない。<br/>
「Audio Reverb Zone」というのがあるけど、僕の直感が「こいつは違う…」と言っている。</p>

<p>さて、どうするかな。</p>

<p>もうよく分からないので「GameObject > Create Empty」で空のオブジェクトを追加してやりました。</p>

<p>inspectorタブの中に「add component」というのがあり、それをクリックすると、「audio > audio source」というメニューがあるじゃないか！</p>

<p>「これだな…」</p>

<p>と僕のゴーストがささやいた。</p>

<p>秒速でそれを選択し、同じくinspector内に追加された「audio clip」の項目をクリック。先ほど追加した初音ミクサウンドを選択！</p>

<p><img src="http://befool-inc.github.io/images/posts/2013-05-16-unity-study-03-use-sound/add_sound_component.png" alt="サウンド追加" /></p>

<p>おお！<br/>
それっぽい画面になっているじゃないですかー。</p>

<p>プレビュー再生ボタンを押して確認してみる。</p>

<p><img src="http://befool-inc.github.io/images/posts/2013-05-16-unity-study-03-use-sound/preview.png" alt="プレビュー" /></p>

<p>再生されている…！！！（画像じゃわからないけど）</p>

<h2>次回の課題</h2>

<p>画像も置いた、サウンドも再生できた、あれ、これもうゲーム作れるんじゃない？と調子に乗っております。<br/>
次回は、ちょこーっとだけプログラム的なことができたらと思っています。<br/>
そうだ、じゃあ、こんなのはどうでしょう？</p>

<p>「画像をクリックしたら、音楽が再生される」</p>

<p>これだ！
次回へつづく。</p>
<div class='octopress-authorbox'>
	<div class="author-pic">
		<img src="http://www.gravatar.com/avatar/c158f3ca39ffcd3e3f1a56e5d14ccc0c" alt="木内智史之介" />
	</div>
	
	<div class="author-about">
		<h3>木内智史之介</h3>
		<p>ｼｬｯﾁｮｰ</p>
		<ul class="author-links">
			
			<li>
			<a href="http://twitter.com/grateful_dead">@grateful_dead</a>
			</li>
			
			
			<li>
            <a href="http://d.hatena.ne.jp/grateful_dead/">生まれる時代をまちがえた</a>
			</li>
			
		</ul>
	</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Unity勉強 第2回 「画像を使ってみる」]]></title>
    <link href="http://befool-inc.github.io/blog/2013/05/01/unity-study-02-use-image/"/>
    <updated>2013-05-01T23:55:00+09:00</updated>
    <id>http://befool-inc.github.io/blog/2013/05/01/unity-study-02-use-image</id>
    <content type="html"><![CDATA[<h2>なにはともあれプロジェクトの作成</h2>

<p>File > New Project<br/>
を選択して、プロジェクトの作成。<br/>
常に、まずはここからです。<br/>
<strong>Import the following the packages</strong> に関しては今のところ空のままでいいでしょう。</p>

<p><img src="http://befool-inc.github.io/images/posts/2013-05-01-unity-study-02-use-image/NewProject.png" alt="New Project" /></p>

<h2>漢は黙ってドラッグ＆ドロップ</h2>

<p>まだ第二回ということで、右も左も分からない赤子同然。
画像の挿入に関しても「ドラッグ＆ドロップでいけるでしょ？」と完全に相手ををなめきっている模様。</p>

<p>「<strong>おれのミンカフォルダが火を噴くぜ！</strong>」</p>

<p>と言わんばかりに光の速度でFinderを開き、お気に入りの画像をドラッグ＆ドロップ！</p>

<p><img src="http://befool-inc.github.io/images/posts/2013-05-01-unity-study-02-use-image/DragAndDropToStage.png" alt="Drag &amp; Drop" /></p>

<p>(´・ω・｀)<br/>
「Scene」へ直接はダメだったけど、なんか「Assets」には入った。</p>

<p>分かった。AssetsからはSceneに投げ込めるんだな！天才か。自分は。自分で自分が怖くなるぜ…。誰か俺を止めてくれ。<br/>
など、ブツブツ意味不明な供述をしながらAssetsからドラッグして、Sceneへドロップ！</p>

<p>だめでした(´・ω・｀)</p>

<p>もしかしたらUnityにはドラッグ＆ドロップという概念がないのかもしれないですね！（そんなばかな）</p>

<h2>GUI Textureなにするものぞ</h2>

<p>Google先生に聞いてみると、「GUI Texture」なるものがあるらしい。<br/>
見るからに2D画像を扱いそうな名前をしている！これに違いない。</p>

<p>GameObject > Create Other > GUI Texture</p>

<p>を選択してオブジェクトを追加。<br/>
すると、「UnityWatermark-small」なるものがHierarchyに追加された。クリックすると、ステージ上でカメラとは別のオブジェクトが選択されたように見える。
これは、もしかして…？と思い「Game」タブをクリックしてみると…。</p>

<p><img src="http://befool-inc.github.io/images/posts/2013-05-01-unity-study-02-use-image/AddImageUnity.png" alt="Unity画像" /></p>

<p>表示されてる！だけど漂う「キミジャナイ」感。<br/>
そう、私はミンカの画像を表示させたいのである。<br/>
Inspector上で、画像の参照を、先ほどAssetsに追加されたミンカ画像を選択、っと。<br/>
同じくInspector上で、サイズ、配置などをチョコチョコッと修正、っと。</p>

<p><img src="http://befool-inc.github.io/images/posts/2013-05-01-unity-study-02-use-image/AddImageMinka.png" alt="ミンカ画像" /></p>

<p>できた！というわけで今日はここまで。<br/>
次回は、サウンドの挿入をやってみたいと思います。</p>

<h2>ミンカが結婚を前提にお付き合いしてくれないかな</h2>

<p>ミンカさん、僕と結婚してください！|ω・`）ﾁﾗｯ</p>
<div class='octopress-authorbox'>
	<div class="author-pic">
		<img src="http://www.gravatar.com/avatar/c158f3ca39ffcd3e3f1a56e5d14ccc0c" alt="木内智史之介" />
	</div>
	
	<div class="author-about">
		<h3>木内智史之介</h3>
		<p>ｼｬｯﾁｮｰ</p>
		<ul class="author-links">
			
			<li>
			<a href="http://twitter.com/grateful_dead">@grateful_dead</a>
			</li>
			
			
			<li>
            <a href="http://d.hatena.ne.jp/grateful_dead/">生まれる時代をまちがえた</a>
			</li>
			
		</ul>
	</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopressへの投稿環境の作り方]]></title>
    <link href="http://befool-inc.github.io/blog/2013/05/01/how-to-make-post-environment/"/>
    <updated>2013-05-01T03:02:00+09:00</updated>
    <id>http://befool-inc.github.io/blog/2013/05/01/how-to-make-post-environment</id>
    <content type="html"><![CDATA[<h2>前置き</h2>

<p>このエントリーは、Octopressのセットアップに関する記事ではありません。<br/>
Octopressを共同編集するにあたっての、個人環境構築に関する記事になります。</p>

<h2>準備作業</h2>

<h3>ruby 1.9.3以上のインストール</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ruby --version
</span><span class='line'>ruby 1.9.3p374 <span class="o">(</span>2013-01-15 revision 38858<span class="o">)</span> <span class="o">[</span>x86_64-darwin12.2.1<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>もしバージョンが低かったり「no such command」とか言われちゃう場合は、この際なのでrbenvを導入しちゃいましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># まずはrbenvのインストール</span>
</span><span class='line'><span class="nv">$ </span>brew install rbenv ruby-build
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s1">&#39;export PATH=&quot;$HOME/.rbenv/bin:$PATH&quot;&#39;</span> &gt;&gt; ~/.bashrc
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s1">&#39;eval &quot;$(rbenv init -)&quot;&#39;</span> &gt;&gt; ~/.bashrc
</span><span class='line'><span class="nv">$ </span><span class="nb">source</span> ~/.bashrc
</span><span class='line'>
</span><span class='line'><span class="c"># 1.9.3p374をインストール</span>
</span><span class='line'><span class="nv">$ </span>rbenv install 1.9.3p374
</span></code></pre></td></tr></table></div></figure>


<h3>windowsの人は</h3>

<p>cygwinでもインストールしてみて！</p>

<h2>Octopress環境を構築しよう</h2>

<h3>「befool-inc/befool-inc.github.com.git」のclone</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>path/to/workspace
</span><span class='line'><span class="nv">$ </span>git clone git@github.com:befool-inc/befool-inc.github.com.git
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>befool-inc.github.com
</span><span class='line'><span class="nv">$ </span>git checkout -b <span class="nb">source </span>remotes/origin/source
</span></code></pre></td></tr></table></div></figure>


<h3>依存ライブラリの取得</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>gem install bundler
</span><span class='line'><span class="nv">$ </span>bundle install
</span></code></pre></td></tr></table></div></figure>


<h3>rakeタスクの確認</h3>

<p>Octopressのrakeタスクが一覧されるか試してみましょう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rake -T
</span><span class='line'>rake clean                     <span class="c"># Clean out caches: .pygments-cache, .gist-cache, .sass-cache</span>
</span><span class='line'>rake copydot<span class="o">[</span><span class="nb">source</span>,dest<span class="o">]</span>      <span class="c"># copy dot files for deployment</span>
</span><span class='line'>rake deploy                    <span class="c"># Default deploy task</span>
</span><span class='line'>rake gen_deploy                <span class="c"># Generate website and deploy</span>
</span><span class='line'>rake generate                  <span class="c"># Generate jekyll site</span>
</span><span class='line'>rake install<span class="o">[</span>theme<span class="o">]</span>            <span class="c"># Initial setup for Octopress: copies the default theme into the path of Jekyll&#39;s generator.</span>
</span><span class='line'>rake integrate                 <span class="c"># Move all stashed posts back into the posts directory, ready for site generation.</span>
</span><span class='line'>rake isolate<span class="o">[</span>filename<span class="o">]</span>         <span class="c"># Move all other posts than the one currently being worked on to a temporary stash location (stash) so regenerating the site happens much more quickly.</span>
</span><span class='line'>rake list                      <span class="c"># list tasks</span>
</span><span class='line'>rake new_page<span class="o">[</span>filename<span class="o">]</span>        <span class="c"># Create a new page in source/(filename)/index.markdown</span>
</span><span class='line'>rake new_post<span class="o">[</span>title<span class="o">]</span>           <span class="c"># Begin a new post in source/_posts</span>
</span><span class='line'>rake preview                   <span class="c"># preview the site in a web browser</span>
</span><span class='line'>rake push                      <span class="c"># deploy public directory to github pages</span>
</span><span class='line'>rake rsync                     <span class="c"># Deploy website via rsync</span>
</span><span class='line'>rake set_root_dir<span class="o">[</span>dir<span class="o">]</span>         <span class="c"># Update configurations to support publishing to root or sub directory</span>
</span><span class='line'>rake setup_github_pages<span class="o">[</span>repo<span class="o">]</span>  <span class="c"># Set up _deploy folder and deploy branch for Github Pages deployment</span>
</span><span class='line'>rake update_source<span class="o">[</span>theme<span class="o">]</span>      <span class="c"># Move source to source.old, install source theme updates, replace source/_includes/navigation.html with source.old&#39;s navigation</span>
</span><span class='line'>rake update_style<span class="o">[</span>theme<span class="o">]</span>       <span class="c"># Move sass to sass.old, install sass theme updates, replace sass/custom with sass.old/custom</span>
</span><span class='line'>rake watch                     <span class="c"># Watch the site and regenerate when it changes</span>
</span></code></pre></td></tr></table></div></figure>


<p>こんな感じで表示されればOKだ。</p>

<h2>記事を書いてみる</h2>

<h3>箱形の作成</h3>

<p>まずは記事を書くための箱形の作成を行います。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rake new_post<span class="o">[</span><span class="s1">&#39;foo bar zoo&#39;</span><span class="o">]</span>
</span><span class='line'>mkdir -p <span class="nb">source</span>/_posts
</span><span class='line'>Creating new post: <span class="nb">source</span>/_posts/2013-05-01-foo-bar-zoo.markdown
</span></code></pre></td></tr></table></div></figure>


<h3>markdownの編集</h3>

<p>markdown形式で記事を書きます</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vi <span class="nb">source</span>/_posts/2013-05-01-foo-bar-zoo.markdown
</span></code></pre></td></tr></table></div></figure>


<h3>プレビュー</h3>

<p>Octopressではローカルで記事のプレビューが可能です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># 公開用ファイル群を生成</span>
</span><span class='line'><span class="nv">$ </span>rake generate
</span><span class='line'>
</span><span class='line'><span class="c"># プレビュー</span>
</span><span class='line'><span class="nv">$ </span>rake preview
</span></code></pre></td></tr></table></div></figure>


<p>WEBブラウザを開いて、「<a href="http://localhost:4000/">http://localhost:4000/</a>」へアクセスしてみてください。<br/>
表示されましたか？</p>

<h2>デプロイ</h2>

<p>当たり前の話ではありますが、ローカルで記事を書いただけではWEB上に公開されません。<br/>
Octopressはgithubへのコミットまで面倒を見てくれます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rake deploy
</span></code></pre></td></tr></table></div></figure>


<p>これで、記事がWEBに公開されました！おめでとう！</p>
<div class='octopress-authorbox'>
	<div class="author-pic">
		<img src="http://www.gravatar.com/avatar/c158f3ca39ffcd3e3f1a56e5d14ccc0c" alt="木内智史之介" />
	</div>
	
	<div class="author-about">
		<h3>木内智史之介</h3>
		<p>ｼｬｯﾁｮｰ</p>
		<ul class="author-links">
			
			<li>
			<a href="http://twitter.com/grateful_dead">@grateful_dead</a>
			</li>
			
			
			<li>
            <a href="http://d.hatena.ne.jp/grateful_dead/">生まれる時代をまちがえた</a>
			</li>
			
		</ul>
	</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[test octopress author box]]></title>
    <link href="http://befool-inc.github.io/blog/2013/05/01/test-octopress-author-box/"/>
    <updated>2013-05-01T01:18:00+09:00</updated>
    <id>http://befool-inc.github.io/blog/2013/05/01/test-octopress-author-box</id>
    <content type="html"><![CDATA[<h1>Octopressに寄稿者の情報を表示する</h1>

<p>テストだお</p>
<div class='octopress-authorbox'>
	<div class="author-pic">
		<img src="http://www.gravatar.com/avatar/c158f3ca39ffcd3e3f1a56e5d14ccc0c" alt="木内智史之介" />
	</div>
	
	<div class="author-about">
		<h3>木内智史之介</h3>
		<p>ｼｬｯﾁｮｰ</p>
		<ul class="author-links">
			
			<li>
			<a href="http://twitter.com/grateful_dead">@grateful_dead</a>
			</li>
			
			
			<li>
            <a href="http://d.hatena.ne.jp/grateful_dead/">生まれる時代をまちがえた</a>
			</li>
			
		</ul>
	</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Unity勉強 第1回 「Hello World」]]></title>
    <link href="http://befool-inc.github.io/blog/2013/04/30/unity-study-01-hello-world/"/>
    <updated>2013-04-30T13:21:00+09:00</updated>
    <id>http://befool-inc.github.io/blog/2013/04/30/unity-study-01-hello-world</id>
    <content type="html"><![CDATA[<h2>Unityとは？</h2>

<p>iPhoneアプリの開発とか、Androidアプリの開発だとかで、
やれObjective-Cだとか、やれJAVAだとか、そういった言語の習得が必須なわけですね。<br/>
エンジニアとしては、できればそれぞれそのネイティブな言語でアプリを開発したい気持ちが強いのですが、そうも言ってられない事情もありまして…。</p>

<p>開発環境の構築、言語の習得、ノウハウの蓄積など、様々なコストがあり、
「iPhoneでもAndroidでもアプリを出すんだい！」というプロジェクトの場合、
それらのコストが「2倍になります」という状況は、非常にツライものがあります。<br/>
特別めんどくさがり屋さんでなくとも、一つ作れば、それがiPhoneでも動くし、Androidでも動く、というのが理想なわけです。</p>

<p>それを実現してくれるのが「Unity」なのです。</p>

<h2>プロジェクトを作成する</h2>

<p>さあさあとりあえずいじってみよう、というわけで、みんな大好き「Hello World」行ってみようと思います。</p>

<p>File > New Project<br/>
を選択して、プロジェクトの作成。<br/>
<strong>Import the following the packages</strong> は今のところよく分からないので空で。</p>

<p><img src="http://befool-inc.github.io/images/posts/2013-04-30-unity-study-01-hello-world/NewProject.png" alt="New Project" /></p>

<h2>「Hello World」を表示する</h2>

<p>ググってみると、みなさん、<strong>debug.log(&#8216;hello world.&#8217;)</strong>のように、コンソール上に出力しているようですが、
やはりユーザー目線で何かしらの表示させたいのが正直なところでしょう。</p>

<p>何かないかなーとメニューを漁っていると、「<strong>3D Text</strong>」なるものを発見！これか？！</p>

<p>GameObject > CreateOther > 3D Text</p>

<p>選択してみると…、おっ。なんか画面上に配置された。しかも、既に「Hello World」ってなってる！</p>

<p><img src="http://befool-inc.github.io/images/posts/2013-04-30-unity-study-01-hello-world/CreateObject.png" alt="New Project" /></p>

<p>憎い…この気の利かせ方が憎いでござる…！</p>

<p>なんかこれで「できました」っていうのも癪なので、めくらめっぽにあっちいじったり、こっちいじったりしながら作成したのがこちらのHelloWorldです。</p>

<p><img src="http://befool-inc.github.io/images/posts/2013-04-30-unity-study-01-hello-world/HelloWorld.png" alt="New Project" /></p>

<p>よし。「枠に収まらない漢」というアピールができました！</p>

<h2>次回の予定</h2>

<p>次回は画像の表示を行いたいと思います。</p>
<div class='octopress-authorbox'>
	<div class="author-pic">
		<img src="http://www.gravatar.com/avatar/c158f3ca39ffcd3e3f1a56e5d14ccc0c" alt="木内智史之介" />
	</div>
	
	<div class="author-about">
		<h3>木内智史之介</h3>
		<p>ｼｬｯﾁｮｰ</p>
		<ul class="author-links">
			
			<li>
			<a href="http://twitter.com/grateful_dead">@grateful_dead</a>
			</li>
			
			
			<li>
            <a href="http://d.hatena.ne.jp/grateful_dead/">生まれる時代をまちがえた</a>
			</li>
			
		</ul>
	</div>
</div>
]]></content>
  </entry>
  
</feed>
